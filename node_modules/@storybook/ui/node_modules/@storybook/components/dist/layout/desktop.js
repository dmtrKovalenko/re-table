'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n.Resizer {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.Resizer.horizontal {\n  height: 10px;\n  margin: -5px 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  cursor: row-resize;\n  width: 100%;\n}\n.Resizer.horizontal::after {\n  content: \'\';\n  display: block;\n  height: 2px;\n  width: 20px;\n  border-top: 1px solid rgba(0,0,0, 0.2);\n  border-bottom: 1px solid rgba(0,0,0, 0.2);\n}\n\n.Resizer.vertical {\n  width: 10px;\n  margin: 0 -5px;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  cursor: col-resize;\n}\n.Resizer.vertical::after {\n  content: \'\';\n  display: block;\n  width: 2px;\n  height: 20px;\n  border-left: 1px solid rgba(0,0,0, 0.2);\n  border-right: 1px solid rgba(0,0,0, 0.2);\n}\n\n.Resizer.disabled {\n  visibility: hidden;\n}\n'], ['\n.Resizer {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.Resizer.horizontal {\n  height: 10px;\n  margin: -5px 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  cursor: row-resize;\n  width: 100%;\n}\n.Resizer.horizontal::after {\n  content: \'\';\n  display: block;\n  height: 2px;\n  width: 20px;\n  border-top: 1px solid rgba(0,0,0, 0.2);\n  border-bottom: 1px solid rgba(0,0,0, 0.2);\n}\n\n.Resizer.vertical {\n  width: 10px;\n  margin: 0 -5px;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  cursor: col-resize;\n}\n.Resizer.vertical::after {\n  content: \'\';\n  display: block;\n  width: 2px;\n  height: 20px;\n  border-left: 1px solid rgba(0,0,0, 0.2);\n  border-right: 1px solid rgba(0,0,0, 0.2);\n}\n\n.Resizer.disabled {\n  visibility: hidden;\n}\n']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _global = require('global');

var _emotion = require('emotion');

var _reactEmotion = require('react-emotion');

var _reactEmotion2 = _interopRequireDefault(_reactEmotion);

var _lodash = require('lodash.throttle');

var _lodash2 = _interopRequireDefault(_lodash);

var _reactSplitPane = require('react-split-pane');

var _reactSplitPane2 = _interopRequireDefault(_reactSplitPane);

var _dimensions = require('./dimensions');

var _dimensions2 = _interopRequireDefault(_dimensions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line no-unused-expressions
(0, _emotion.injectGlobal)(_templateObject);

var StoriesPanelWrapper = (0, _reactEmotion2.default)('div')(function (_ref) {
  var showStoriesPanel = _ref.showStoriesPanel,
      storiesPanelOnTop = _ref.storiesPanelOnTop;
  return {
    boxSizing: 'border-box',
    width: '100%',
    height: '100%',
    display: showStoriesPanel ? 'flex' : 'none',
    flexDirection: storiesPanelOnTop ? 'column' : 'row',
    alignItems: 'stretch',
    paddingRight: storiesPanelOnTop ? 10 : 0
  };
});

var StoriesPanelInner = (0, _reactEmotion2.default)('div')({
  flexGrow: 1,
  position: 'relative',
  height: '100%',
  width: '100%',
  overflow: 'auto'
});

var AddonPanelWrapper = (0, _reactEmotion2.default)('div')(function (_ref2) {
  var showAddonPanel = _ref2.showAddonPanel,
      addonPanelInRight = _ref2.addonPanelInRight,
      layoutMargin = _ref2.theme.layoutMargin;
  return {
    display: showAddonPanel ? 'flex' : 'none',
    flexDirection: addonPanelInRight ? 'row' : 'column',
    alignItems: 'stretch',
    position: 'absolute',
    width: '100%',
    height: '100%',
    padding: addonPanelInRight ? layoutMargin + 'px ' + layoutMargin + 'px ' + layoutMargin + 'px 0' : '0 ' + layoutMargin + 'px ' + layoutMargin + 'px 0',
    boxSizing: 'border-box'
  };
});

var ContentPanel = (0, _reactEmotion2.default)('div')(function (_ref3) {
  var addonPanelInRight = _ref3.addonPanelInRight,
      storiesPanelOnTop = _ref3.storiesPanelOnTop,
      layoutMargin = _ref3.theme.layoutMargin;
  return {
    position: 'absolute',
    boxSizing: 'border-box',
    width: '100%',
    height: '100%',
    padding: addonPanelInRight ? layoutMargin + 'px 0 ' + layoutMargin + 'px 0' : layoutMargin + 'px ' + layoutMargin + 'px 0 0',
    paddingTop: storiesPanelOnTop ? 0 : layoutMargin
  };
});

var PreviewWrapper = (0, _reactEmotion2.default)('div')(function (_ref4) {
  var theme = _ref4.theme;
  return {
    width: '100%',
    height: '100%',
    boxSizing: 'border-box',
    overflow: 'auto',
    WebkitOverflowScrolling: 'touch',
    position: 'relative',
    backgroundColor: theme.mainFill
  };
}, function (_ref5) {
  var fullscreen = _ref5.fullscreen,
      theme = _ref5.theme;
  return fullscreen ? {
    position: 'fixed',
    left: 0,
    right: 0,
    top: 0,
    zIndex: 1,
    border: 0,
    margin: 0,
    padding: 0
  } : {
    border: theme.mainBorder,
    borderRadius: theme.mainBorderRadius,

    display: 'flex',
    justifyItems: 'center',
    alignItems: 'center',
    '& > *': {
      margin: 'auto'
    }
  };
});

var DragBlockOverlay = (0, _reactEmotion2.default)('div')(function (_ref6) {
  var isDragging = _ref6.isDragging;
  return {
    zIndex: isDragging ? 2 : 0,
    display: isDragging ? 'block' : 'none',
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
});

var defaultSizes = {
  addonPanel: {
    down: 200,
    right: 400
  },
  storiesPanel: {
    left: 250,
    top: 400
  }
};

var _saveSizes = function _saveSizes(sizes) {
  try {
    _global.localStorage.setItem('panelSizes', (0, _stringify2.default)(sizes));
    return true;
  } catch (e) {
    return false;
  }
};

var getSavedSizes = function getSavedSizes(sizes) {
  try {
    var panelSizes = _global.localStorage.getItem('panelSizes');
    if (panelSizes) {
      return JSON.parse(panelSizes);
    }
    _saveSizes(sizes);
    return sizes;
  } catch (e) {
    _saveSizes(sizes);
    return sizes;
  }
};

var Layout = function (_Component) {
  (0, _inherits3.default)(Layout, _Component);

  function Layout(props) {
    (0, _classCallCheck3.default)(this, Layout);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Layout.__proto__ || (0, _getPrototypeOf2.default)(Layout)).call(this, props));

    _this.layerSizes = getSavedSizes(defaultSizes);

    _this.state = {
      previewPanelDimensions: {
        height: 0,
        width: 0
      },
      isDragging: false
    };

    _this.throttledUpdatePreviewPanelState = (0, _lodash2.default)(_this.updatePrevewPanelState.bind(_this), 200);
    _this.throttledSaveSizes = (0, _lodash2.default)(_this.saveSizes, 25);
    _this.onDragStart = _this.onDragStart.bind(_this);
    _this.onDragEnd = _this.onDragEnd.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Layout, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      _global.window.addEventListener('resize', this.throttledUpdatePreviewPanelState);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _global.window.removeEventListener('resize', this.throttledUpdatePreviewPanelState);
    }
  }, {
    key: 'onDragStart',
    value: function onDragStart() {
      this.setState({ isDragging: true });
    }
  }, {
    key: 'onDragEnd',
    value: function onDragEnd() {
      this.setState({ isDragging: false });
    }
  }, {
    key: 'onResize',
    value: function onResize(pane, mode, size) {
      this.throttledSaveSizes(pane, mode, size);
      this.throttledUpdatePreviewPanelState();
    }
  }, {
    key: 'saveSizes',
    value: function saveSizes(pane, mode, size) {
      this.layerSizes[pane][mode] = size;
      _saveSizes(this.layerSizes);
    }
  }, {
    key: 'updatePrevewPanelState',
    value: function updatePrevewPanelState() {
      var _previewPanelRef = this.previewPanelRef,
          clientWidth = _previewPanelRef.clientWidth,
          clientHeight = _previewPanelRef.clientHeight;


      this.setState({
        previewPanelDimensions: {
          width: clientWidth,
          height: clientHeight
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          goFullScreen = _props.goFullScreen,
          showStoriesPanel = _props.showStoriesPanel,
          showAddonPanel = _props.showAddonPanel,
          addonPanelInRight = _props.addonPanelInRight,
          AddonPanel = _props.addonPanel,
          StoriesPanel = _props.storiesPanel,
          Preview = _props.preview;
      var _state = this.state,
          previewPanelDimensions = _state.previewPanelDimensions,
          isDragging = _state.isDragging;

      var storiesPanelOnTop = false;
      var addonSplit = addonPanelInRight ? 'vertical' : 'horizontal';
      var storiesSplit = storiesPanelOnTop ? 'horizontal' : 'vertical';

      var sizes = getSavedSizes(this.layerSizes);
      var storiesPanelDefaultSize = !storiesPanelOnTop ? sizes.storiesPanel.left : sizes.storiesPanel.top;
      var addonPanelDefaultSize = !addonPanelInRight ? sizes.addonPanel.down : sizes.addonPanel.right;

      return _react2.default.createElement(
        _reactSplitPane2.default,
        {
          split: storiesSplit,
          allowResize: showStoriesPanel,
          minSize: 1,
          maxSize: -400,
          size: showStoriesPanel ? storiesPanelDefaultSize : 1,
          defaultSize: storiesPanelDefaultSize,
          onDragStarted: this.onDragStart,
          onDragFinished: this.onDragEnd,
          onChange: function onChange(size) {
            return _this2.onResize('storiesPanel', storiesPanelOnTop ? 'top' : 'left', size);
          }
        },
        _react2.default.createElement(
          StoriesPanelWrapper,
          { showStoriesPanel: showStoriesPanel, storiesPanelOnTop: storiesPanelOnTop },
          _react2.default.createElement(
            StoriesPanelInner,
            null,
            _react2.default.createElement(StoriesPanel, null)
          )
        ),
        _react2.default.createElement(
          _reactSplitPane2.default,
          {
            split: addonSplit,
            allowResize: showAddonPanel,
            primary: 'second',
            minSize: addonPanelInRight ? 200 : 100,
            maxSize: -200,
            size: showAddonPanel ? addonPanelDefaultSize : 1,
            defaultSize: addonPanelDefaultSize,
            onDragStarted: this.onDragStart,
            onDragFinished: this.onDragEnd,
            onChange: function onChange(size) {
              return _this2.onResize('addonPanel', addonPanelInRight ? 'right' : 'down', size);
            }
          },
          _react2.default.createElement(
            ContentPanel,
            { addonPanelInRight: addonPanelInRight, storiesPanelOnTop: storiesPanelOnTop },
            _react2.default.createElement(DragBlockOverlay, { isDragging: isDragging }),
            _react2.default.createElement(
              PreviewWrapper,
              {
                fullscreen: goFullScreen,
                innerRef: function innerRef(ref) {
                  _this2.previewPanelRef = ref;
                }
              },
              _react2.default.createElement(Preview, null),
              _react2.default.createElement(_dimensions2.default, previewPanelDimensions)
            )
          ),
          _react2.default.createElement(
            AddonPanelWrapper,
            { showAddonPanel: showAddonPanel, addonPanelInRight: addonPanelInRight },
            _react2.default.createElement(AddonPanel, null)
          )
        )
      );
    }
  }]);
  return Layout;
}(_react.Component);

Layout.propTypes = {
  showStoriesPanel: _propTypes2.default.bool.isRequired,
  showAddonPanel: _propTypes2.default.bool.isRequired,
  goFullScreen: _propTypes2.default.bool.isRequired,
  storiesPanel: _propTypes2.default.func.isRequired,
  preview: _propTypes2.default.func.isRequired,
  addonPanel: _propTypes2.default.func.isRequired,
  addonPanelInRight: _propTypes2.default.bool.isRequired
};

exports.default = Layout;