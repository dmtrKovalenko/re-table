'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Shortcuts = exports.Keys = undefined;
exports.getShortcuts = getShortcuts;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactEmotion = require('react-emotion');

var _reactEmotion2 = _interopRequireDefault(_reactEmotion);

var _emotion = require('emotion');

var _emotionTheming = require('emotion-theming');

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Command = (0, _reactEmotion2.default)('b')(function (_ref) {
  var isLast = _ref.isLast,
      isFirst = _ref.isFirst,
      theme = _ref.theme;

  switch (true) {
    case isFirst && isLast:
      {
        return {
          borderRight: '0 none',
          borderRadius: 2,
          marginRight: 0
        };
      }
    case isFirst:
      {
        return {
          borderRight: theme.mainBorder,
          borderRadius: theme.mainBorderRadius + ' 0 0 ' + theme.mainBorderRadius,
          marginRight: 0
        };
      }
    case isLast:
      {
        return {
          borderRight: '0 none',
          borderRadius: '0 ' + theme.mainBorderRadius + ' ' + theme.mainBorderRadius + ' 0',
          marginRight: 9
        };
      }
    default:
      {
        return {
          borderRight: '0 none',
          borderRadius: 0,
          marginRight: 9
        };
      }
  }
}, function (_ref2) {
  var theme = _ref2.theme;
  return {
    padding: '2px 10px',
    backgroundColor: theme.inputFill,
    color: 'inherit',
    lineHeight: '36px',
    minWidth: 50,
    display: 'inline-block',
    textAlign: 'center'
  };
});

var Title = (0, _reactEmotion2.default)('h4')({
  marginTop: 0,
  textAlign: 'left',
  color: 'inherit'
});

var Table = (0, _reactEmotion2.default)('table')({
  borderCollapse: 'collapse'
});

var CommandDescription = (0, _reactEmotion2.default)('span')({
  fontSize: 12,
  color: 'inherit'
});

// manage two separate shortcut keys for
// 'mac' & other (windows, linux) platforms
function getShortcuts(platform) {
  // if it is mac platform
  if (platform && platform.indexOf('mac') !== -1) {
    return [{ name: 'Show Search Box', keys: ['⌘ ⇧ O', '⌃ ⇧ O'] }, { name: 'Toggle Addon panel position', keys: ['⌘ ⇧ G', '⌃ ⇧ G'] }, { name: 'Toggle Fullscreen Mode', keys: ['⌘ ⇧ F', '⌃ ⇧ F'] }, { name: 'Toggle Stories Panel', keys: ['⌘ ⇧ X', '⌃ ⇧ X'] }, { name: 'Toggle Addon panel', keys: ['⌘ ⇧ Z', '⌃ ⇧ Z'] }, { name: 'Next Story', keys: ['⌘ ⇧ →', '⌃ ⇧ →'] }, { name: 'Previous Story', keys: ['⌘ ⇧ ←', '⌃ ⇧ ←'] }];
  }

  return [{ name: 'Show Search Box', keys: ['Ctrl + Shift + O'] }, { name: 'Toggle Addon panel position', keys: ['Ctrl + Shift + G'] }, { name: 'Toggle Fullscreen Mode', keys: ['Ctrl + Shift + F'] }, { name: 'Toggle Stories Panel', keys: ['Ctrl + Shift + X'] }, { name: 'Toggle Addon panel', keys: ['Ctrl + Shift + Z'] }, { name: 'Next Story', keys: ['Ctrl + Shift + →'] }, { name: 'Previous Story', keys: ['Ctrl + Shift + ←'] }];
}

var Keys = exports.Keys = function Keys(_ref3) {
  var shortcutKeys = _ref3.shortcutKeys;
  return _react2.default.createElement(
    'span',
    null,
    shortcutKeys.map(function (key, index, arr) {
      return _react2.default.createElement(
        Command,
        { key: key, isLast: arr.length - 1 === index, isFirst: index === 0 },
        key
      );
    })
  );
};

Keys.propTypes = {
  shortcutKeys: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired
};

var Shortcuts = exports.Shortcuts = function Shortcuts(_ref4) {
  var appShortcuts = _ref4.appShortcuts;
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      Title,
      null,
      'Keyboard Shortcuts'
    ),
    _react2.default.createElement(
      Table,
      null,
      _react2.default.createElement(
        'tbody',
        null,
        appShortcuts.map(function (shortcut) {
          return _react2.default.createElement(
            'tr',
            { key: shortcut.name },
            _react2.default.createElement(
              'td',
              null,
              _react2.default.createElement(Keys, { shortcutKeys: shortcut.keys })
            ),
            _react2.default.createElement(
              'td',
              null,
              _react2.default.createElement(
                CommandDescription,
                null,
                shortcut.name
              )
            )
          );
        })
      )
    )
  );
};

Shortcuts.propTypes = {
  appShortcuts: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    name: _propTypes2.default.string.isRequired,
    keys: _propTypes2.default.array
  })).isRequired
};

function ShortcutsHelp(_ref5) {
  var isOpen = _ref5.isOpen,
      onClose = _ref5.onClose,
      platform = _ref5.platform,
      theme = _ref5.theme;

  return _react2.default.createElement(
    _reactModal2.default,
    {
      isOpen: isOpen,
      onRequestClose: onClose,
      className: (0, _emotion.css)({
        position: 'absolute',
        border: theme.mainBorder,
        borderRadius: theme.mainBorderRadius,
        boxSizing: 'border-box',
        padding: 32,
        top: 32,
        left: '50%',
        width: 440,
        outline: '0 none',
        marginLeft: -220,
        overflow: 'visible',
        background: theme.barFill,
        fontSize: theme.mainTextColor,
        fontFamily: theme.mainTextFace,
        color: theme.mainTextColor
      }),
      overlayClassName: (0, _emotion.css)({
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        background: theme.overlayBackground,
        zIndex: 1
      }),
      contentLabel: 'Shortcuts'
    },
    _react2.default.createElement(Shortcuts, { appShortcuts: getShortcuts(platform) })
  );
}

ShortcutsHelp.propTypes = {
  theme: _propTypes2.default.shape({}).isRequired,
  isOpen: _propTypes2.default.bool,
  onClose: _propTypes2.default.func,
  platform: _propTypes2.default.string.isRequired
};
ShortcutsHelp.defaultProps = {
  isOpen: false,
  onClose: function onClose() {}
};

exports.default = (0, _emotionTheming.withTheme)(ShortcutsHelp);