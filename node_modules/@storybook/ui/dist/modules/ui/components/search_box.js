'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchBox = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactEmotion = require('react-emotion');

var _reactEmotion2 = _interopRequireDefault(_reactEmotion);

var _reactLifecyclesCompat = require('react-lifecycles-compat');

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var _reactFuzzy = require('react-fuzzy');

var _reactFuzzy2 = _interopRequireDefault(_reactFuzzy);

var _emotionTheming = require('emotion-theming');

var _emotion = require('emotion');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var formatStories = function formatStories(stories) {
  var formattedStories = [];
  var i = 0;
  stories.forEach(function (val) {
    i += 1;
    formattedStories.push({
      type: 'kind',
      value: val.kind,
      id: i
    });

    val.stories.forEach(function (story) {
      i += 1;
      formattedStories.push({
        type: 'story',
        value: story,
        id: i,
        kind: val.kind
      });
    });
  });

  return formattedStories;
};

var SuggestionWrapper = (0, _reactEmotion2.default)('div')(function (_ref) {
  var selected = _ref.selected,
      selectedResultStyle = _ref.selectedResultStyle,
      resultsStyle = _ref.resultsStyle;
  return selected ? selectedResultStyle : resultsStyle;
}, { display: 'flex', justifyContent: 'space-between' });
var SuggestionValue = (0, _reactEmotion2.default)('p')({ margin: 0 });
var SuggestionKind = (0, _reactEmotion2.default)('p')({
  opacity: 0.5,
  margin: 0,
  paddingLeft: 10,
  textAlign: 'right'
});

var suggestionTemplate = function suggestionTemplate(props, state, styles, clickHandler) {
  return state.results.map(function (val, i) {
    return _react2.default.createElement(
      SuggestionWrapper,
      (0, _extends3.default)({
        selected: state.selectedIndex === i
      }, styles, {
        tabIndex: 0,
        role: 'option',
        'aria-selected': state.selectedIndex === i,
        key: val.value + '_' + val.id,
        onClick: function onClick() {
          return clickHandler(i);
        }
      }),
      _react2.default.createElement(
        SuggestionValue,
        null,
        val.value
      ),
      _react2.default.createElement(
        SuggestionKind,
        null,
        val.type === 'story' ? 'in ' + val.kind : 'Kind'
      )
    );
  });
};

var SearchBox = function (_React$Component) {
  (0, _inherits3.default)(SearchBox, _React$Component);

  function SearchBox() {
    var _ref2;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, SearchBox);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = SearchBox.__proto__ || (0, _getPrototypeOf2.default)(SearchBox)).call.apply(_ref2, [this].concat(args))), _this), _this.onSelect = function (selected) {
      var onClose = _this.props.onClose;


      if (selected.type === 'story') {
        _this.fireOnStory(selected.value, selected.kind);
      } else {
        _this.fireOnKind(selected.value);
      }
      onClose();
    }, _this.onModalOpen = function () {
      if (_this.inputRef.refs.searchBox !== null) {
        _this.inputRef.refs.searchBox.focus();
      }
    }, _this.fireOnKind = function (kind) {
      var onSelectStory = _this.props.onSelectStory;

      if (onSelectStory) {
        onSelectStory(kind, null);
      }
    }, _this.fireOnStory = function (story, kind) {
      var onSelectStory = _this.props.onSelectStory;

      if (onSelectStory) {
        onSelectStory(kind, story);
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(SearchBox, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          showSearchBox = _props.showSearchBox,
          onClose = _props.onClose,
          theme = _props.theme,
          stories = _props.stories;


      return _react2.default.createElement(
        _reactModal2.default,
        {
          isOpen: showSearchBox,
          onAfterOpen: this.onModalOpen,
          onRequestClose: onClose,
          className: (0, _emotion.css)({
            fontSize: theme.mainTextColor,
            fontFamily: theme.mainTextFace,
            color: theme.mainTextColor
          }),
          overlayClassName: (0, _emotion.css)({
            position: 'fixed',
            height: '100vh',
            width: '100vw',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: theme.overlayBackground,
            zIndex: 1
          }),
          contentLabel: 'Search',
          shouldReturnFocusAfterClose: false
        },
        _react2.default.createElement(_reactFuzzy2.default, {
          list: formatStories(stories),
          onSelect: this.onSelect,
          keys: ['value', 'type'],
          resultsTemplate: suggestionTemplate,
          ref: function ref(inputRef) {
            _this2.inputRef = inputRef;
          }
        })
      );
    }
  }]);
  return SearchBox;
}(_react2.default.Component);

SearchBox.defaultProps = { stories: [] };

SearchBox.propTypes = {
  theme: _propTypes2.default.shape({}).isRequired,
  showSearchBox: _propTypes2.default.bool.isRequired,
  stories: _propTypes2.default.arrayOf(_propTypes2.default.object),
  onSelectStory: _propTypes2.default.func.isRequired,
  onClose: _propTypes2.default.func.isRequired
};

exports.SearchBox = SearchBox;

(0, _reactLifecyclesCompat.polyfill)(SearchBox);
exports.default = (0, _emotionTheming.withTheme)(SearchBox);