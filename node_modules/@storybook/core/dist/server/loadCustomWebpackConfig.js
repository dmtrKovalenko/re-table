'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _interpret = require('interpret');

var _interpret2 = _interopRequireDefault(_interpret);

var _nodeLogger = require('@storybook/node-logger');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copied and modified from
// https://github.com/webpack/webpack-cli/blob/ca504de8c7c0ea66278021b72fa6a953e3ffa43c/bin/convert-argv.js#L102-L119
/* eslint-disable global-require, import/no-dynamic-require */
function registerCompiler(moduleDescriptor) {
  if (!moduleDescriptor) {
    return 0;
  }

  if (typeof moduleDescriptor === 'string') {
    require(moduleDescriptor);
    return 1;
  }

  if (!Array.isArray(moduleDescriptor)) {
    moduleDescriptor.register(require(moduleDescriptor.module));
    return 1;
  }

  var registered = 0;

  for (var i = 0; i < moduleDescriptor.length; i += 1) {
    try {
      registered += registerCompiler(moduleDescriptor[i]);
      break;
    } catch (e) {
      // do nothing
    }
  }

  return registered;
}

// Copied and modified from
// https://github.com/webpack/webpack-cli/blob/ca504de8c7c0ea66278021b72fa6a953e3ffa43c/bin/convert-argv.js#L121-L137
function requireConfig(configPath) {
  var config = require(configPath);

  var isES6DefaultExported = (typeof config === 'undefined' ? 'undefined' : (0, _typeof3.default)(config)) === 'object' && config !== null && typeof config.default !== 'undefined';

  return isES6DefaultExported ? config.default : config;
}

// Copied and modified from
// https://github.com/webpack/webpack-cli/blob/ca504de8c7c0ea66278021b72fa6a953e3ffa43c/bin/convert-argv.js#L45-L143

exports.default = function (configDir) {
  var extensions = (0, _keys2.default)(_interpret2.default.extensions).sort(function (a, b) {
    if (a === '.js') {
      return -1;
    }
    if (b === '.js') {
      return 1;
    }
    return a.length - b.length;
  });

  var customConfigCandidates = ['webpack.config', 'webpackfile'].map(function (filename) {
    return extensions.map(function (ext) {
      return {
        path: _path2.default.resolve(configDir, filename + ext),
        ext: ext
      };
    });
  }).reduce(function (a, i) {
    return a.concat(i);
  }, []);

  for (var i = 0; i < customConfigCandidates.length; i += 1) {
    var customConfigPath = customConfigCandidates[i].path;
    if (_fs2.default.existsSync(customConfigPath)) {
      if (registerCompiler(_interpret2.default.extensions[customConfigCandidates[i].ext]) === 0) {
        _nodeLogger.logger.warn('=> Custom configuration file ' + customConfigPath + ' is detected');
        _nodeLogger.logger.warn('   but impossible to import loader for ' + customConfigCandidates[i].ext);
      }
      try {
        return requireConfig(customConfigPath);
      } catch (e) {
        // do nothing
      }
    }
  }

  return null;
};