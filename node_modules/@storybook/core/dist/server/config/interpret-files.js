'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

exports.getInterpretedFile = getInterpretedFile;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _interpret = require('interpret');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var boost = new _set2.default(['.js', '.jsx', '.ts', '.tsx']);

function sortExtensions() {
  return [].concat((0, _toConsumableArray3.default)((0, _from2.default)(boost)), (0, _toConsumableArray3.default)((0, _keys2.default)(_interpret.extensions).filter(function (ext) {
    return !boost.has(ext);
  }).sort(function (a, b) {
    return a.length - b.length;
  })));
}

var possibleExtensions = sortExtensions();

function getInterpretedFile(pathToFile) {
  return possibleExtensions.map(function (ext) {
    return '' + pathToFile + ext;
  }).find(function (candidate) {
    return _fs2.default.existsSync(candidate);
  });
}